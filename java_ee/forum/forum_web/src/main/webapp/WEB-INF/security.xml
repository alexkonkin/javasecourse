<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <!--security:http pattern="/rest/**" create-session="stateless">
        <security:intercept-url pattern='/**' access='ROLE_ADMINISTRATOR' />
        <security:http-basic />
    </security:http-->


    <!--security:http create-session="stateless" entry-point-ref="basicAuthEntryPoint" pattern="/rest/**" use-expressions="true">
        <security:intercept-url pattern="/rest/topics" access="hasAnyRole('ROLE_ADMINISTRATOR')" />
        <security:custom-filter ref="basicAuthenticationFilter" after="BASIC_AUTH_FILTER" />
    </security:http>

    <bean id="basicAuthEntryPoint" class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
        <property name="realmName" value="rest-service" />
    </bean>

    <bean id="basicAuthenticationFilter" class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationEntryPoint" ref="basicAuthEntryPoint" />
    </bean-->
    <!--security:debug /-->

    <!--security:http create-session="stateless" entry-point-ref="authenticationEntryPoint" pattern="/rest/**" use-expressions="true">
        <security:intercept-url pattern="/rest/topics" access="hasAnyRole('ROLE_ADMINISTRATOR')" />
         <security:custom-filter ref="basicAuthenticationFilter" after="BASIC_AUTH_FILTER" />
    </security:http>

    <bean id="basicAuthenticationFilter"
          class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="authenticationEntryPoint" ref="authenticationEntryPoint" />
    </bean>

    <bean id="authenticationEntryPoint" class="com.globallogic.javaee.service.PlainTextBasicAuthenticationEntryPoint">
        <property name="realmName" value="rest-service" />
    </bean-->




    <!--security:http create-session="stateless"  entry-point-ref="authenticationEntryPoint" pattern="/rest/**">
        <security:intercept-url pattern="/rest/**" />
        <security:custom-filter ref="basicAuthenticationFilter" after="BASIC_AUTH_FILTER" />
    </security:http>

    <bean id="basicAuthenticationFilter"
          class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="authenticationEntryPoint" ref="authenticationEntryPoint" />
    </bean-->

    <security:http auto-config="true">
        <security:access-denied-handler error-page="/error403"/>
        <security:intercept-url pattern="/main" access="ROLE_USER"/>
        <security:intercept-url pattern="/admin" access="ROLE_ADMINISTRATOR"/>
        <!--security:intercept-url pattern="/rest/**" access="ROLE_ADMINISTRATOR"/-->
        <security:form-login login-page="/" default-target-url="/loginpassed" authentication-failure-url="/loginfailed" />
        <security:logout logout-url="/logout" logout-success-url="/" />
        <security:anonymous username="guest" granted-authority="ROLE_ANONYMOUS" />
        <security:remember-me />
    </security:http>



    <!--bean id="authenticationEntryPoint"
          class="com.globallogic.javaee.service.LogFilter">
        <property name="realmName" value="test.com" />
    </bean-->

    <!--security:http create-session="stateless" entry-point-ref="authenticationEntryPoint" authentication-manager-ref="authenticationManager">
        <security:custom-filter ref="customRestFilter" position="BASIC_AUTH_FILTER" />
        <security:intercept-url pattern="/**" access="ROLE_USER" />
    </security:http-->



    <security:authentication-manager erase-credentials="false" alias="authenticationManager">
        <security:authentication-provider>
            <security:password-encoder hash="plaintext" />
            <security:jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="SELECT login as username, password, enabled from users where login=?;"
                               authorities-by-username-query="select login as username, role as authority from users, user_roles where users.id = user_roles.id_user and users.login = ?;"
            />
        </security:authentication-provider>
    </security:authentication-manager>

    <bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"/>

</beans>